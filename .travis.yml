jobs:
  include:
  # - stage: Pre-built Test
  #   language: node_js
  #   node_js:
  #   - node
  #   cache:
  #     directories:
  #     - node_modules
  - stage: Test
    script:
    - echo "Testing"
    - echo $TRAVIS_BRANCH
    - echo $DOCKER_USERNAME
    - docker build -t $DOCKER_USERNAME/express-boilerplate-test --build-arg "SOURCE_COMMIT=$(git rev-parse HEAD)" -f Dockerfile.test .
    - docker run --rm $DOCKER_USERNAME/express-boilerplate-test
  # - stage: Build and Publish
  #   script:
  #   - echo "Building"
  #   - export LAST_COMMIT_SHA="${LAST_COMMIT_SHA:-$(git rev-parse HEAD)}"
  #   - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USERNAME" --password-stdin
  #   - docker build -t $DOCKER_USERNAME/express-boilerplate --build-arg "SOURCE_COMMIT=$(git rev-parse HEAD)" .
  #   - docker images
  #   - echo "Publishing to docker registry"
  #   - docker tag  $DOCKER_USERNAME/express-boilerplate $DOCKER_USERNAME/express-boilerplate
  #   - docker push $DOCKER_USERNAME/express-boilerplate
env:
  global:
  - secure: hx4DdQvAWw3vKffi0FGp6U+da1bRS/OEX1/uxTU3QUYPlD9EFXmJli1Cah++8s1gNfjaR6q4oQHU4PCUL02q2TUEVKbKph/3s2tsGnLktB5F32VWBEM/M0P75wTVFsaIWvAXnmYIlflTWIbOkdOGi2PeJfjMu1C3wfRlemuhGiUZeoa5ghfVWC2n9UwEXYRgau2OWQilYr5nUE2w8EBZIJjBMJmVgjZjV0jhEkKSQsfVJa/Q+P6k52wVDFrrMToljYMBn+/RM9LXzf7QI/kiPfv9GK/vTI5Glb8fPD2WgehQrfQtQrnKaAt0V3EfJpOVUTt9Z3GhuyUfHa60muYUO9TQhg71Ja9H28V3W4gZJFZUDT4qSf2LINKb7eLvtmwKQzxbzSq+5l4iv5wsaFarcz9c2mtjp6QDhDQeGTxGxk9YfxMSs7/RrUoySOvWYMrBoAFhK9PNk4DhYmBg8qqKoZftvGbepAq1PWRsp5LM+/hRPcCHvswvVBTm1lV0efhCn+KIprUTSNF54Er4GqJC7y5WQpsoJXDm8me7/0V9JUqAiS+E3TG9NgT1gExn6xJu0FsVJahMRMnPqDCexhlJilTnKcZVOxNjAezelJils37bTf4oSM5/eQeKZ2Jata1bBJO/HGaadla33D4jKoC86E3VtDbtCFGMssHaPEy8BZA=
  - secure: A9KEPot5hgONdPIZksfozE54wGZZP7kRAV7S0W4hWmWqsVdeh2HU8/3FA51ldPNHj+ISjoX9aeWjBz59pu2HsObZj9bMJzRxQpUYtlaXSqjhBRMDkb5WK7vVaVLm7bQcQiDeon2KWynQbnHJGmHKcThcizp3fXWdiRHhMuVLOY47bkpIe9qe3zWB2u76sukiC3mncTCtSKbNqGXCIg1kVHpSCprx/dhrnjB/LYOCVG9yDnG/rkNQkCgj8hisX/T6iL/4jhq+Gdxt7LkpayAwLgeaOzG/LvBJ4KaCo9FWJCNk7aQiXGatQ1Gkxz60P5t0GLGVZ0CN3O2dQ7XFBh+aGyQT6L6TVYsMyukfYoyTHQVvzlcwskUAPb+H+PQt3xMSFmeZDqAfxzCS44wM85qYLhOqNi4gi825iOMgSYDVhJQTSaWOXoirYyudvvW46OHuHnT8olEKAVlWGxDn9zZ4/7dTN3UapYL+GLWXOVpWABlqddP5KlyVtBs1xnJAbAn/nItp7oSfkUG8obJwrb89lYbLFd/gwF/r7FpdH0tqqmaQE4/vmgW5oSIezguawByALsGzXiahjhidV150oMg/Wtn9bLV1OFgPlrqUU1aHkGlzNtFMCFLUagrBxd4KQG/7eF9OzJwXDM86UpndXHasbTwb2rob1WPYEHof1ve5nPs=
