jobs:
  include:
  - stage: Pre-built Test
    language: node_js
    node_js:
    - node
    cache:
      directories:
      - node_modules
  - stage: Test
    script:
    - echo "Testing"
    - echo $DOCKER_USERNAME
    - docker build -t $DOCKER_USERNAME/express-boilerplate-test --build-arg "SOURCE_COMMIT=$(git rev-parse HEAD)" -f Dockerfile.test .
    - docker run --rm $DOCKER_USERNAME/express-boilerplate-test
  - stage: Build and Publish
    script:
    - echo "Building"
    - export LAST_COMMIT_SHA="${LAST_COMMIT_SHA:-$(git rev-parse HEAD)}"
    - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker build -t $DOCKER_USERNAME/express-boilerplate --build-arg "SOURCE_COMMIT=$(git rev-parse HEAD)" .
    - docker images
    - echo "Publishing to docker registry"
    - docker tag  $DOCKER_USERNAME/express-boilerplate $DOCKER_USERNAME/express-boilerplate
    - docker push $DOCKER_USERNAME/express-boilerplate
env:
  global:
  - secure: S2IJXIAQO++aGy+V+ARyzkr95OU+EOvX79qOm4dZFPgJlCKMRZ5soCqeY6a2EQ4eq41habdPMYImpNtefL8PhBrzA0p0jbJeDgHQehvwtLrkKHkPz0vCqBLqaIMQZT7f92XYaPYr3EOaCJjqfp3ho42uFSobiVCFTLfgPc8trbGYKO2qcMm4WqfnfXzZD7ZaRiYmuC6Hob99/mTYCaHP7elrTLUehoBraDPvDd3cEFnf/sxV1md94ph6wCmbd3ZO5znZ6bt2MdgMkgPvB2wio9vrWeXN5UTLdlB5DSu+hAfnm5TiGx7t6lpOtB04LlzH8DEt4z+v8eiKD5vRJoYerRB22DCCkhailfhdt28RrOvNSn8k6lRgOl+sAranoJqkbPhg3W3fESgXKJNGmo9Skhe29dR4rvbDPZdZ3I4A/g4H3bjeXYUrc7vnP2+C/aQnrhGKtlW7pRpoUZlAu5OJ8+P9btKmbWJV3nEoFPOs/riIszXTe84dJ2+sMmiWHLrOVtbR+FbsJnRNPsAiVgqmhI7b/8qRfZhfv3/NZkzWovWJQ1y4xh15oPrUDjpzTjFmcpkBrkMT95tFrhqwDkbIu4Xoqo461+OvO4bklhU/SGbrl8GqIRqmWJ1ki2te+yVwLYHL20NCjaWxeDSgxP2ycmKsIqDsi1tufWszTiGI0mQ=
  - secure: W2bAVaETP7Q1wUorl+Y0VTflWfpxJR8M1tLjc1aMSSr/5ioAyIHEDVBUvQOQfj+RNSv7MwJviCS1ox02srfX7XlFJJXjtzD1tseNZxm00hrHrysmy7ul5hMpNrGoOht40JOIDvAUTDlvNGDTPLjWfDyu3pmAm9022UuuD42uoPffFR9z+dBdIcl5ezb8hXGB4YWyeYcoy1GtDU6DGVvwatJUizZLmY4ByelA6g3qh6AsIO422dzS9PIJjmNq7+62tUZvAlnWTczEDUVVu8nPiUXlW6Lhz3NpvqVIJajYKBWx/z5tBmYCjtjjoVsA52tqHNtj9pdhii9fL2HqEQwCycWUdsYT4577xmn+3VYz0eOXimiahuJ8xy82dTkcqFdRohsZw/LQabbLYUu3jF0V/fkBBX0M3geQlvmaJGtgFc+apk1n3Ksh7cfMCRNJ/ao1n7EI5Uasw0GbCCKBjjm7s1S1X+9CFYDPjPmJWhgc+aoiFcJBOtSnM2HZNEuQv6eFbkg7ccbQzyLESRDHExTopYDthu0J5hWXvGUt7dP7qeJ5Ycj63NYNRWm+u7T+4U7Hf4KQzLF+mM0JdHPOcoKRKprUcyH14W5ublAWiBUAyh3P3lMRgja2Em4bVBt/4bKtFyWI7c+Cz4vUaBBGAx0EaYJq84cX2QZTC356DXK3AqY=
